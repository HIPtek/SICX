/*
 * Copyright (C) 2012 Helsinki Institute of Physics, University of Helsinki
 * All rights reserved. See the copyright.txt in the distribution for a full 
 * listing of individual contributors.
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *      http://www.apache.org/licenses/LICENSE-2.0
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 * 
 */

package fi.hip.sicx.vaadin;

import java.io.File;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;
import com.vaadin.ui.Window;

import fi.hip.sicx.slcs.SLCSClient;

/**
 * LoginWindow class.
 *
 * @author Seppo Heikkila <seppo.heikkila@cern.ch>
 * @author Joni Hahkala <joni.hahkala@cern.ch>
 */
public class LoginWindow extends CustomComponent {

    /**
     * 
     */
    private static final long serialVersionUID = -3582555349441348735L;
    @AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Label loginfailed;
	@AutoGenerated
	private CheckBox checkBox_1;
	@AutoGenerated
	private Button signin;
	@AutoGenerated
	private TextField password;
	@AutoGenerated
	private TextField username;
	@AutoGenerated
	private Label passwordl;
	@AutoGenerated
	private Label usernamel;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public LoginWindow(GUIComponent root, Window loginwindow) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		guicompo = root;
		windowl = loginwindow;
		loginfailed.setVisible(false);
		
		// Give some working username and password so people can test the GUI
		username.setValue("");password.setValue("");
		password.setSecret(true);
		
		// TODO add user code here
		signin.addListener(new Button.ClickListener() {
           private static final long serialVersionUID = 3795196238829012379L;

            // If empty password and username, use old cert
            public void buttonClick(ClickEvent event) {
            	File certificate = validateLogin(username.getValue().toString(), password.getValue().toString());
            	//String targetdir = System.getProperty("user.home") + System.getProperty("file.separator") + ".sicx_data" + System.getProperty("file.separator");
            	//File certificate = new File(targetdir + "trusted_client.cert");
            	
            	if(certificate == null || !certificate.exists()) {
            		//getWindow().showNotification("Login failed."); //, Notification.TYPE_ERROR_MESSAGE);
            		//getWindow().setCaption("SICX login (check username/password)");
            		loginfailed.setVisible(true);
            	}else {
            		loginfailed.setVisible(false);
            		guicompo.doAuthentication(certificate, username.getValue().toString());
            		(windowl.getParent()).removeWindow(windowl);
            	}
            }
		});
	}

	Window windowl;
	GUIComponent guicompo;
	
	/**
	 * Tries to find X.509 certificate with the given username and
	 * password. This might be better done in separate class.
	 * 
	 * @param inUsername Username of the user
	 * @param inPassword Password of the user
	 * @return File containing the certificate.
	 */
	private File validateLogin(String inUsername, String inPassword) {
		if(inUsername.length() >= 0) {
			String targetdir = "/tmp/";
			try{
				// Try to login by fetching certificate to homedir
				targetdir = System.getProperty("user.home") + System.getProperty("file.separator") + ".sicx_data" + System.getProperty("file.separator");
				//System.out.println("Targetdir: " + targetdir);
				//System.out.println("Username: " + username + ",password: " + password);		
				
				File thismightexist = new File(targetdir + "trusted_client.cert");
				if(inUsername.length() == 0 && inPassword.length() == 0 && thismightexist.exists()) {
					loginfailed.setVisible(false);
					System.out.println("Login success.");
				}else if(SLCSClient.slcsLogin(inUsername, inPassword, "changeit", targetdir, "")==false) {
					System.out.println("Login failed.");
					loginfailed.setValue("<font color=\"red\">Login failed, please check your inputs.</font>");
					return null;
				}else {
					loginfailed.setVisible(false);
					System.out.println("Login success.");
				}
			}catch (Exception e){//Catch exception if any
				System.err.println("Login error: " + e.getClass() + ": "+ e.getMessage());
				System.err.println("Stack: " +  e.getStackTrace());
				e.printStackTrace();
				return null;
			}
			return new File(targetdir + "trusted_client.cert");
		}
		return null;
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("300px");
		mainLayout.setHeight("130px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("300px");
		setHeight("130px");
		
		// usernamel
		usernamel = new Label();
		usernamel.setImmediate(false);
		usernamel.setWidth("-1px");
		usernamel.setHeight("-1px");
		usernamel.setValue("Username");
		mainLayout.addComponent(usernamel, "top:14.0px;left:17.0px;");
		
		// passwordl
		passwordl = new Label();
		passwordl.setImmediate(false);
		passwordl.setWidth("-1px");
		passwordl.setHeight("-1px");
		passwordl.setValue("Password");
		mainLayout.addComponent(passwordl, "top:47.0px;left:16.0px;");
		
		// username
		username = new TextField();
		username.setImmediate(false);
		username.setWidth("185px");
		username.setHeight("-1px");
		username.setSecret(false);
		mainLayout.addComponent(username, "top:11.0px;left:95.0px;");
		
		// password
		password = new TextField();
		password.setImmediate(false);
		password.setWidth("184px");
		password.setHeight("-1px");
		password.setSecret(false);
		mainLayout.addComponent(password, "top:43.0px;left:96.0px;");
		
		// signin
		signin = new Button();
		signin.setCaption("Sign in");
		signin.setImmediate(true);
		signin.setWidth("-1px");
		signin.setHeight("-1px");
		mainLayout.addComponent(signin, "top:88.0px;left:40.0px;");
		
		// checkBox_1
		checkBox_1 = new CheckBox();
		checkBox_1.setCaption("Remember me");
		checkBox_1.setImmediate(false);
		checkBox_1.setWidth("-1px");
		checkBox_1.setHeight("-1px");
		mainLayout.addComponent(checkBox_1, "top:91.0px;left:129.0px;");
		
		// loginfailed
		loginfailed = new Label();
		loginfailed.setImmediate(false);
		loginfailed.setWidth("-1px");
		loginfailed.setHeight("-1px");
		loginfailed.setValue("<font color=\"red\">Login failed, please check your inputs.</font>");
		loginfailed.setContentMode(3);
		mainLayout.addComponent(loginfailed, "top:68.0px;left:53.0px;");
		
		return mainLayout;
	}

}
